{"version":3,"sources":["Containers/Nav/Nav.module.scss","Containers/Nav/NavigationItems/NavigationItems.module.scss","Containers/Nav/SideDrawer/DrawerToggle/DrawerToggle.module.scss","Containers/Customers/Customers.module.scss","App.module.scss","Containers/LandingPage/LandingPage.module.scss","Containers/Nav/NavigationItems/NavigationItem/NavigationItem.module.scss","Containers/Nav/Logo/Logo.module.scss","Components/UI/Backdrop/Backdrop.module.scss","logo.svg","Containers/Nav/NavigationItems/NavigationItem/NavigationItem.js","Containers/Nav/NavigationItems/NavigationItems.js","Containers/Nav/Logo/Logo.js","Containers/Nav/SideDrawer/DrawerToggle/DrawerToggle.js","Components/UI/Backdrop/Backdrop.js","Containers/Nav/SideDrawer/SideDrawer.js","Containers/Nav/Nav.js","Containers/LandingPage/LandingPage.js","Containers/Customers/Customers.js","App.js","serviceWorker.js","index.js","Containers/Nav/SideDrawer/SideDrawer.module.scss"],"names":["module","exports","navigationItem","props","className","styles","NavigationItem","href","link","children","navigationItems","NavigationItems","LanguageButtons","logo","Logo","src","window","location","origin","imgsrc","drawerToggle","attachedClasses","DrawerToggle","hidden","join","onClick","clicked","backdrop","show","Backdrop","sideDrawer","SideDrawer","Close","open","Open","closed","NavItems","Nav","useState","showSideDrawer","setShowSideDrawer","Navbar","DesktopOnly","LandingPage","Content","Customers","customersDiv","customers","setCustomers","useEffect","axios","get","then","value","data","catch","e","console","log","undefined","map","customer","key","id","Customer","firstName","lastName","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.51e252ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Nav_Navbar__3Fnly\",\"DesktopOnly\":\"Nav_DesktopOnly__1KFa-\",\"ErrorBox\":\"Nav_ErrorBox__2Q7M7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2UC6v\",\"NavigationButtons\":\"NavigationItems_NavigationButtons__3MT-e\",\"LanguageButtons\":\"NavigationItems_LanguageButtons__3WWEY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3ZFAS\",\"hidden\":\"DrawerToggle_hidden__FHFud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Customers_Content__2XJs4\",\"Customer\":\"Customers_Customer__1KDAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\",\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"LandingPage_Content__1LZhq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2WsgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1PV18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__FT4AB\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nimport styles from './NavigationItem.module.scss';\r\n\r\nconst navigationItem = ( props ) => {\r\n    return (\r\n        <div className={styles.NavigationItem}>\r\n            <a href={props.link}>{props.children}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport styles from './NavigationItems.module.scss';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = ( props ) => {\r\n    \r\n    return (\r\n        <div className={styles.NavigationItems}>\r\n        <NavigationItem link=\"/\"> Home </NavigationItem>\r\n        <NavigationItem link=\"/customers\"> Customers </NavigationItem>\r\n        <div className={styles.LanguageButtons}>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport styles from './Logo.module.scss';\r\n\r\nconst logo = ( props ) => {\r\n    return (\r\n        <div className={styles.Logo}>\r\n           <a href=\"/\"><img src={window.location.origin + props.imgsrc}/></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nimport styles from './DrawerToggle.module.scss';\r\n\r\nconst drawerToggle = ( props ) => {\r\n    let attachedClasses = [styles.DrawerToggle, styles.hidden];\r\n\r\n    return(\r\n        <div className={attachedClasses.join(\" \")} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport styles from './Backdrop.module.scss';\r\n\r\nconst backdrop = ( props ) => {\r\n    if(props.show){\r\n        return(\r\n            <div className={styles.Backdrop} onClick={props.clicked}></div>\r\n        )\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../../Components/UI/Backdrop/Backdrop';\r\n\r\nimport styles from './SideDrawer.module.scss';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [styles.SideDrawer, styles.Close];\r\n    \r\n    if (props.open) {\r\n        attachedClasses = [styles.SideDrawer, styles.Open]\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <div className={styles.Logo}>\r\n                    <Logo imgsrc=\"/logo128.png\"/>\r\n                </div>\r\n                <nav className={styles.NavItems}>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;        ","import React, { useState, useEffect } from 'react';\r\n\r\nimport styles from './Nav.module.scss';\r\n\r\nimport NavigationItems from './NavigationItems/NavigationItems'\r\nimport Logo from './Logo/Logo';\r\nimport DrawerToggle from './SideDrawer/DrawerToggle/DrawerToggle';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\n\r\nconst Nav = ( props ) => {\r\n\r\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n    const sideDrawerClosedHandler = () => {\r\n        setShowSideDrawer(false);\r\n    }\r\n\r\n    const openDrawerHandler = () => {\r\n        setShowSideDrawer(true);\r\n    }\r\n    return (\r\n    <>\r\n    <header className={styles.Navbar}>\r\n    <DrawerToggle clicked={openDrawerHandler}/>\r\n    <SideDrawer open={showSideDrawer} closed={sideDrawerClosedHandler}/>\r\n    <nav className={styles.DesktopOnly}>\r\n    <NavigationItems/>\r\n    </nav>\r\n    </header>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport styles from './LandingPage.module.scss';\n\nimport Nav from '../Nav/Nav';\n\nconst LandingPage = ( props ) => {\n    return(\n        <>\n        <Nav/>\n        <div className={styles.Content}>\n            <h4>Welcome!</h4>\n        </div>\n        </>\n    )\n}\n\nexport default LandingPage;","import React, { useState, useEffect } from 'react';\nimport styles from './Customers.module.scss';\nimport axios from 'axios';\n\nimport Nav from '../Nav/Nav';\n\nconst Customers = ( props ) => {\n    \n    const[customers, setCustomers] = useState();\n\n    useEffect(() => {\n        axios.get(\"api/customers\").then((value) => {\n            setCustomers(value.data);\n        }).catch((e) => {\n            console.log(e);\n        });\n    });\n    let customersDiv;\n    if(customers !== undefined) {\n    console.log(customers);\n    customersDiv = customers.map((customer) => {\n        return(<div key={customer.id} className={styles.Customer}>{customer.firstName + \" \" + customer.lastName}</div>);\n    });\n    } else {\n        customersDiv = <></>;\n    }\n\n    return(\n        <>\n        <Nav/>\n        <div className={styles.Content}>\n            {customersDiv}\n        </div>\n        </>\n    )\n}\n\nexport default Customers;","import React from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\nimport styles from './App.module.scss';\nimport LandingPage from './Containers/LandingPage/LandingPage';\nimport Customers from './Containers/Customers/Customers';\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/customers\">\n            <Customers/>\n          </Route>\n          <Route path=\"/\">\n            <LandingPage/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__igdnY\",\"NavItems\":\"SideDrawer_NavItems__36aCF\",\"Open\":\"SideDrawer_Open__1uqKR\",\"Close\":\"SideDrawer_Close__JcHbc\",\"Logo\":\"SideDrawer_Logo__U1hWa\"};"],"sourceRoot":""}