{"version":3,"sources":["App.module.scss","Containers/Nav/Nav.module.scss","Containers/Nav/NavigationItems/NavigationItems.module.scss","Containers/Nav/SideDrawer/DrawerToggle/DrawerToggle.module.scss","Containers/Customers/Customers.module.scss","Containers/LandingPage/LandingPage.module.scss","Containers/Nav/NavigationItems/NavigationItem/NavigationItem.module.scss","Containers/Nav/Logo/Logo.module.scss","Components/UI/Backdrop/Backdrop.module.scss","logo.svg","Containers/Nav/NavigationItems/NavigationItem/NavigationItem.js","Containers/Nav/NavigationItems/NavigationItems.js","Containers/Nav/SideDrawer/DrawerToggle/DrawerToggle.js","Components/UI/Backdrop/Backdrop.js","Containers/Nav/SideDrawer/SideDrawer.js","Containers/Nav/Nav.js","Containers/LandingPage/LandingPage.js","Containers/Customers/Customers.js","App.js","serviceWorker.js","index.js","Containers/Nav/SideDrawer/SideDrawer.module.scss"],"names":["module","exports","navigationItem","props","className","styles","NavigationItem","href","link","children","navigationItems","NavigationItems","LanguageButtons","drawerToggle","attachedClasses","DrawerToggle","hidden","join","onClick","clicked","backdrop","show","Backdrop","sideDrawer","SideDrawer","Close","open","Open","closed","Logo","NavItems","Nav","useState","showSideDrawer","setShowSideDrawer","Navbar","DesktopOnly","SetPath","LandingPage","Content","Customers","customersDiv","customers","setCustomers","useEffect","axios","get","then","value","data","catch","e","console","log","undefined","map","customer","key","id","Customer","firstName","lastName","App","ModalWrap","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fc80445a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__3rdsK\",\"App\":\"App_App__1jObQ\",\"ModalWrap\":\"App_ModalWrap__TYshJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Nav_Navbar__31qDS\",\"DesktopOnly\":\"Nav_DesktopOnly__1ubwA\",\"ErrorBox\":\"Nav_ErrorBox__1TFOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3HIZ3\",\"NavigationButtons\":\"NavigationItems_NavigationButtons__qKhis\",\"LanguageButtons\":\"NavigationItems_LanguageButtons__50MFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__13q7b\",\"hidden\":\"DrawerToggle_hidden__1nFLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Customers_Content__4DVNr\",\"Customer\":\"Customers_Customer__1vAz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"LandingPage_Content__2Jdia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__ePuEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3UWLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__16SqJ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\nimport styles from './NavigationItem.module.scss';\r\n\r\nconst navigationItem = ( props ) => {\r\n    return (\r\n        <div className={styles.NavigationItem}>\r\n            <a href={props.link}>{props.children}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport styles from './NavigationItems.module.scss';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = ( props ) => {\r\n    \r\n    return (\r\n        <div className={styles.NavigationItems}>\r\n        <NavigationItem link=\"/\"> Home </NavigationItem>\r\n        <NavigationItem link=\"/customers\"> Customers </NavigationItem>\r\n        <div className={styles.LanguageButtons}>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport styles from './DrawerToggle.module.scss';\r\n\r\nconst drawerToggle = ( props ) => {\r\n    let attachedClasses = [styles.DrawerToggle, styles.hidden];\r\n\r\n    return(\r\n        <div className={attachedClasses.join(\" \")} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport styles from './Backdrop.module.scss';\r\n\r\nconst backdrop = ( props ) => {\r\n    if(props.show){\r\n        return(\r\n            <div className={styles.Backdrop} onClick={props.clicked}></div>\r\n        )\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../../Components/UI/Backdrop/Backdrop';\r\n\r\nimport styles from './SideDrawer.module.scss';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [styles.SideDrawer, styles.Close];\r\n    \r\n    if (props.open) {\r\n        attachedClasses = [styles.SideDrawer, styles.Open]\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <div className={styles.Logo}>\r\n                </div>\r\n                <nav className={styles.NavItems}>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;        ","import React, { useState, useEffect } from 'react';\r\n\r\nimport styles from './Nav.module.scss';\r\n\r\nimport NavigationItems from './NavigationItems/NavigationItems'\r\nimport Logo from './Logo/Logo';\r\nimport DrawerToggle from './SideDrawer/DrawerToggle/DrawerToggle';\r\nimport SideDrawer from './SideDrawer/SideDrawer';\r\n\r\nconst Nav = ( props ) => {\r\n\r\n    const [showSideDrawer, setShowSideDrawer] = useState(false);\r\n\r\n    const sideDrawerClosedHandler = () => {\r\n        setShowSideDrawer(false);\r\n    }\r\n\r\n    const openDrawerHandler = () => {\r\n        setShowSideDrawer(true);\r\n    }\r\n    return (\r\n    <>\r\n    <header className={styles.Navbar}>\r\n    <DrawerToggle clicked={openDrawerHandler}/>\r\n    <SideDrawer open={showSideDrawer} closed={sideDrawerClosedHandler}/>\r\n    <nav className={styles.DesktopOnly}>\r\n    <NavigationItems SetPath={props.SetPath}/>\r\n    </nav>\r\n    </header>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport styles from './LandingPage.module.scss';\r\n\r\nimport Nav from '../Nav/Nav';\r\n\r\nconst LandingPage = ( props ) => {\r\n    return(\r\n        <>\r\n        <Nav SetPath={props.SetPath}/>\r\n        <div className={styles.Content}>\r\n            <h4>Welcome!</h4>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import React, { useState, useEffect } from 'react';\r\nimport styles from './Customers.module.scss';\r\nimport axios from 'axios';\r\n\r\nimport Nav from '../Nav/Nav';\r\n\r\nconst Customers = ( props ) => {\r\n    \r\n    const[customers, setCustomers] = useState();\r\n\r\n    useEffect(() => {\r\n        axios.get(\"api/customers\").then((value) => {\r\n            setCustomers(value.data);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }, []);\r\n    let customersDiv;\r\n    if(customers !== undefined) {\r\n    customersDiv = customers.map((customer) => {\r\n        return(<div key={customer.id} className={styles.Customer}>{customer.firstName + \" \" + customer.lastName}</div>);\r\n    });\r\n    } else {\r\n        customersDiv = <></>;\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Nav SetPath={props.SetPath}/>\r\n        <div className={styles.Content}>\r\n            {customersDiv}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Customers;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom';\r\nimport styles from './App.module.scss';\r\nimport LandingPage from './Containers/LandingPage/LandingPage';\r\nimport Customers from './Containers/Customers/Customers';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={styles.App}>\r\n      <div className={styles.ModalWrap}>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/customers\">\r\n            <Customers/>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <LandingPage/>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__H4Blo\",\"NavItems\":\"SideDrawer_NavItems__2q_se\",\"Open\":\"SideDrawer_Open__3tMlC\",\"Close\":\"SideDrawer_Close__3OJsH\",\"Logo\":\"SideDrawer_Logo__1nG-6\"};"],"sourceRoot":""}